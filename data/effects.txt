{name: succeeded, 
roles:[updateParam(?actor,?paramName,?newValue)]}
{name: succeeded, 
roles:[askQuestion(?actor,?speaker,?toSay,?responseForm)]}
{name: succeeded, 
roles:[assertBeliefs(?actor,?beliefs,?memoryLevel)]}
{name: failed, 
roles:[queryLastSource(?actor,?query)]}
{name: succeeded, 
roles:[observeFluent(?actor,?state)]}
{name: failed, 
roles:[runScrewdriverJob(?actor,?screwType)]}
{name: failed, 
roles:[alignWith(?actor,?holeRef)]}
{name: succeeded, 
roles:[resumeGoal(?actor)]}
{name: succeeded, 
roles:[forgetThat(?actor,?requester,?predicate)]}
{name: knows, 
roles:[?actor,mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)]}
{name: succeeded, 
roles:[adjustPoseToCameraHeight(?actor,?goal,?cameraHeight)]}
{name: failed, 
roles:[addDetectionType(?actor,?descriptor,?jobName)]}
{name: failed, 
roles:[moveZRelative(?actor,?dist)]}
{name: failed, 
roles:[handleGreeting(?actor,?speaker,?addressee,?greeting,?semanticType)]}
{name: failed, 
roles:[getGoal(?actor,?goalPredicate)]}
{name: succeeded, 
roles:[goToPose(?actor,?goal)]}
{name: succeeded, 
roles:[moveToCognexTarget(?actor,?results,?jobIndex)]}
{name: failed, 
roles:[estimatePerformanceMeasures(?actor,?goalPred,?temporal,?assessmentModification)]}
{name: succeeded, 
roles:[doCognexOffset(?actor)]}
{name: failed, 
roles:[waitForAck(?actor)]}
{name: succeeded, 
roles:[handleError(?actor,?speaker,?addressee,?errorSemantics,?semanticType)]}
{name: succeeded, 
roles:[getActionsByEffect(?actor,?effect)]}
{name: succeeded, 
roles:[switchProgram(?actor,?id)]}
{name: succeeded, 
roles:[unstickScrewdriver(?actor,?returnTo)]}
{name: succeeded, 
roles:[endLearningAssembleScript(?actor,?modelName)]}
{name: failed, 
roles:[suspendGoal(?actor)]}
{name: failed, 
roles:[completion(?actor,?model,?prompt)]}
{name: failed, 
roles:[cancelGoal(?actor)]}
{name: failed, 
roles:[getActionsBySignature(?actor,?actionSignature)]}
{name: failed, 
roles:[forgetHow(?actor,?requester,?actionSignature)]}
{name: succeeded, 
roles:[delay(?actor,?seconds)]}
{name: succeeded, 
roles:[answerQuestion(?actor,?speaker,?listener,?answerSemantics)]}
{name: not, 
roles:[at(?actor,?pose2)]}
{name: failed, 
roles:[defineItem(?actor,?item)]}
{name: succeeded, 
roles:[ejectEE(?actor)]}
{name: succeeded, 
roles:[assemblenvfau(?actor,?var_0)]}
{name: failed, 
roles:[setLLMModel(?actor,?model)]}
{name: succeeded, 
roles:[moveAwayFromJointLimit(?actor)]}
{name: failed, 
roles:[moveInPlane(?actor,?x,?y)]}
{name: succeeded, 
roles:[removeActionsWithSignature(?actor,?actionSignature)]}
{name: failed, 
roles:[modifyAction(?actor,?action,?modification,?location)]}
{name: failed, 
roles:[observeProperties(?actor,?query)]}
{name: succeeded, 
roles:[openaiChatCompletion(?actor,?model,?prompt)]}
{name: failed, 
roles:[getGoalFailConditions(?actor,?gid)]}
{name: failed, 
roles:[moveAndOrientToCognexTarget(?actor,?refID)]}
{name: failed, 
roles:[moveXRelative(?actor,?dist)]}
{name: knows, 
roles:[?actor,actionDescription(?goalPred,!stepPredicate)]}
{name: succeeded, 
roles:[defineScrewType(?actor,?screwType)]}
{name: failed, 
roles:[joinOnGoal(?actor,?gid,?millis)]}
{name: succeeded, 
roles:[perceiveEntity(?actor,?refId)]}
{name: succeeded, 
roles:[acknowledge(?actor)]}
{name: knows, 
roles:[?actor,contextDescription(?location,!steps)]}
{name: succeeded, 
roles:[getObservers(?actor,?obs)]}
{name: failed, 
roles:[getModelType(?actor)]}
{name: succeeded, 
roles:[estimatePerformanceMeasures(?actor,?goalPred,?temporal)]}
{name: succeeded, 
roles:[tell(?actor,?goal)]}
{name: succeeded, 
roles:[retractBelief(?actor,?belief)]}
{name: succeeded, 
roles:[conveyorReverse(?actor)]}
{name: failed, 
roles:[supersedeCurrentGoal(?actor,?newGoal)]}
{name: succeeded, 
roles:[setLLMService(?actor,?service)]}
{name: knows, 
roles:[?actor,probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)]}
{name: succeeded, 
roles:[getScrewdriverProgramIdFromSymbol(?actor,?s)]}
{name: failed, 
roles:[goToPoseLong(?actor,?pose)]}
{name: handled, 
roles:[?actor,?addressee,want(?speaker,?state),?semanticType]}
{name: succeeded, 
roles:[getDictionaryEntries(?actor)]}
{name: failed, 
roles:[cancelGoal(?actor,?goalPredicate)]}
{name: handled, 
roles:[?actor,?addressee,itk(?speaker,?query),?semanticType]}
{name: failed, 
roles:[moveConveyorBackward(?actor)]}
{name: succeeded, 
roles:[resetScrewdriver(?actor)]}
{name: succeeded, 
roles:[getCognexReferenceForID(?actor,?refId)]}
{name: succeeded, 
roles:[putdown(?actor,?physobj,?pose)]}
{name: failed, 
roles:[getContextDescription(?actor,?location)]}
{name: failed, 
roles:[retractBeliefs(?actor,?beliefs)]}
{name: failed, 
roles:[suspendGoal(?actor,?goalPredicate)]}
{name: succeeded, 
roles:[screwScrew(?actor,?screwType)]}
{name: free, 
roles:[?actor]}
{name: succeeded, 
roles:[updateActionLearning(?actor,?newAction,?status)]}
{name: succeeded, 
roles:[openaiChatCompletion(?actor,?chat)]}
{name: failed, 
roles:[chatCompletion(?actor,?model,?chat)]}
{name: succeeded, 
roles:[addNotifications(?actor,?queryTerm,?callbackTerm)]}
{name: succeeded, 
roles:[queryBelief(?actor,?queries)]}
{name: failed, 
roles:[setState(?actor,?predicate)]}
{name: succeeded, 
roles:[assertBelief(?actor,?belief,?memoryLevel)]}
{name: succeeded, 
roles:[querySupportWithExplanation(?actor,?query)]}
{name: failed, 
roles:[joinOnGoal(?actor,?gid)]}
{name: succeeded, 
roles:[getCurrGoals(?actor)]}
{name: failed, 
roles:[retractBelief(?actor,?belief,?memoryLevel)]}
{name: failed, 
roles:[getGripDropoff(?actor,?s)]}
{name: succeeded, 
roles:[submitGoal(?actor,?g)]}
{name: failed, 
roles:[queryBelief(?actor,?queries,?memoryLevel)]}
{name: succeeded, 
roles:[bindCognexResult(?actor,?ref,?result,?indexIntoCognexResult)]}
{name: failed, 
roles:[grab(?actor,?physobj,?pose)]}
{name: failed, 
roles:[getGripper(?actor,?gripperType)]}
{name: failed, 
roles:[getActionStatus(?actor,?gid)]}
{name: succeeded, 
roles:[resumeGoal(?actor,?goalPredicate)]}
{name: failed, 
roles:[handleWant(?actor,?speaker,?addressee,?state,?semanticType)]}
{name: at, 
roles:[?actor,?pose1]}
{name: failed, 
roles:[believeFact(?actor,?speaker,?addressee,?fact,?semanticType)]}
{name: failed, 
roles:[getConstantMappings(?actor)]}
{name: failed, 
roles:[goToPose(?actor,?pose)]}
{name: failed, 
roles:[observeDescriptor(?actor,?descriptor,?numResults)]}
{name: succeeded, 
roles:[openaiChatCompletion(?actor,?model,?messages)]}
{name: failed, 
roles:[believeRule(?actor,?speaker,?head,?body,?semanticType)]}
{name: succeeded, 
roles:[queryLastTime(?actor,?query)]}
{name: succeeded, 
roles:[bindResultsRecursive(?actor,?job,?cameraResults,?i)]}
{name: failed, 
roles:[retractRule(?actor,?head,?body)]}
{name: succeeded, 
roles:[listenForUtterance(?actor,?nlp)]}
{name: succeeded, 
roles:[chatCompletion(?actor,?chat)]}
{name: succeeded, 
roles:[chatCompletion(?actor,?model,?prompt)]}
{name: succeeded, 
roles:[modifyAssemble(?actor,?newScriptID,?oldScriptID,?modification,?location)]}
{name: failed, 
roles:[handleUtterance(?actor,?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)]}
{name: succeeded, 
roles:[getTCPForEE(?actor,?eeType)]}
{name: failed, 
roles:[recordPose(?actor,?poseName,?surfaceHeight)]}
{name: failed, 
roles:[handleAck(?actor,?speaker,?addressee,?semanticType)]}
{name: failed, 
roles:[openaiChatCompletion(?actor,?model,?chat)]}
{name: succeeded, 
roles:[moveToCognexTarget(?actor,?refID)]}
{name: failed, 
roles:[moveToCameraHeight(?actor)]}
{name: succeeded, 
roles:[getActDesc(?actor,?goalPred)]}
{name: succeeded, 
roles:[submitTTSRequest(?actor,?speaker,?listener,?utterance)]}
{name: failed, 
roles:[mountSingleScrew(?actor)]}
{name: succeeded, 
roles:[startLearningAssembleScript(?actor,?modelName)]}
{name: succeeded, 
roles:[gotoCamerapose(?actor,?pose)]}
{name: succeeded, 
roles:[injectDictionaryEntry(?actor,?morpheme,?type,?semantics,?cognitiveStatus)]}
{name: succeeded, 
roles:[cancelGoal(?actor,?goalPredicate)]}
{name: succeeded, 
roles:[suspendGoal(?actor,?goalPredicate)]}
{name: failed, 
roles:[assertBelief(?actor,?belief,?memoryLevel)]}
{name: knows, 
roles:[?actor,capableOf(?goal)]}
{name: failed, 
roles:[getOn(?actor,?object,?destination)]}
{name: failed, 
roles:[resetScrewdriver(?actor)]}
{name: failed, 
roles:[openaiCompletion(?actor,?requestBody)]}
{name: succeeded, 
roles:[assertBelief(?actor,?belief)]}
{name: succeeded, 
roles:[screwIn(?actor,?var_1,?var_0)]}
{name: failed, 
roles:[getAllActions(?actor)]}
{name: succeeded, 
roles:[getGripDropoff(?actor,?s)]}
{name: failed, 
roles:[getDictionaryEntries(?actor)]}
{name: failed, 
roles:[checkCapableOf(?actor,?goal)]}
{name: succeeded, 
roles:[mountScrew(?actor,?screwType)]}
{name: handledSemantics, 
roles:[?actor,?addressee,?speaker,?listeners,?semantics,?suppSemantics,?semanticType]}
{name: failed, 
roles:[closeGripper(?actor)]}
{name: succeeded, 
roles:[assemble(?actor,?modelID)]}
{name: failed, 
roles:[queryBelief(?actor,?query)]}
{name: succeeded, 
roles:[getGripper(?actor,?gripperType)]}
{name: succeeded, 
roles:[getPoseFromSymbol(?actor,?poseName)]}
{name: succeeded, 
roles:[assemblenfsv(?actor,?var_0)]}
{name: succeeded, 
roles:[handleUtterance(?actor,?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)]}
{name: failed, 
roles:[getTCPForEE(?actor,?eeType)]}
{name: succeeded, 
roles:[isDiarcAgent(?actor,?agentRef)]}
{name: succeeded, 
roles:[getPromptText(?actor)]}
{name: failed, 
roles:[generateResponse(?actor,?listener,?semantics,?bindings,?semanticType)]}
{name: failed, 
roles:[putAwayGripper(?actor,?gripperType)]}
{name: failed, 
roles:[queryRecency(?actor,?query)]}
{name: succeeded, 
roles:[getCameraData(?actor,?jobName)]}
{name: knows, 
roles:[?actor,currently(is(?actor,!tmpPred))]}
{name: failed, 
roles:[alternateEE(?actor,?newTCP)]}
{name: succeeded, 
roles:[querySupport(?actor,?query)]}
{name: failed, 
roles:[assertRule(?actor,?head,?body,?memoryLevel)]}
{name: succeeded, 
roles:[actionExists(?actor,?goal)]}
{name: succeeded, 
roles:[cancelGoal(?actor,?goal)]}
{name: failed, 
roles:[queryLastTime(?actor,?query)]}
{name: succeeded, 
roles:[sayText(?actor,?text)]}
{name: succeeded, 
roles:[getRefForJob(?actor,?descriptor)]}
{name: succeeded, 
roles:[undoCognexOffset(?actor)]}
{name: succeeded, 
roles:[observeDescriptor(?actor,?descriptor,?numResults)]}
{name: failed, 
roles:[rotateForToolRack(?actor)]}
{name: failed, 
roles:[querySupportWithExplanation(?actor,?query,?memoryLevel)]}
{name: succeeded, 
roles:[getContextFromId(?actor,?id)]}
{name: succeeded, 
roles:[conveyorForward(?actor)]}
{name: failed, 
roles:[reconnect(?actor)]}
{name: failed, 
roles:[startLearningAssembleScript(?actor,?modelName)]}
{name: succeeded, 
roles:[retractBeliefs(?actor,?beliefs,?memoryLevel)]}
{name: succeeded, 
roles:[acceptEE(?actor)]}
{name: succeeded, 
roles:[believeFact(?actor,?speaker,?addressee,?fact,?semanticType,?responseSemantics)]}
{name: succeeded, 
roles:[getTime(?actor)]}
{name: believes, 
roles:[?addressee,?fact]}
{name: succeeded, 
roles:[getMelfaHeader(?actor)]}
{name: failed, 
roles:[runScrewdriverProgram(?actor,?programID)]}
{name: failed, 
roles:[perceiveEntityFromSymbol(?actor,?refId)]}
{name: succeeded, 
roles:[getGoal(?actor,?goalPredicate)]}
{name: succeeded, 
roles:[suspendGoal(?actor,?goalID)]}
{name: succeeded, 
roles:[isQuestionResponse(?actor,?speaker,?listener,?semantics)]}
{name: succeeded, 
roles:[dip(?actor,?dist)]}
{name: failed, 
roles:[delay(?actor,?seconds)]}
{name: succeeded, 
roles:[supersedeAndUndo(?actor,?newGoal)]}
{name: failed, 
roles:[createBecausePredicate(?actor,?state,?listener,?justification)]}
{name: failed, 
roles:[queryCount(?actor,?query)]}
{name: failed, 
roles:[adjustPoseToCameraHeight(?actor,?goal,?cameraHeight)]}
{name: failed, 
roles:[translateLastGoal(?actor)]}
{name: succeeded, 
roles:[handleSemantics(?actor,?speaker,?addressee,?listeners,?semantics,?suppSemantics,?semanticType)]}
{name: failed, 
roles:[assertBeliefs(?actor,?beliefs)]}
{name: succeeded, 
roles:[chatCompletion(?actor,?prompt)]}
{name: succeeded, 
roles:[cancelGoal(?actor)]}
{name: failed, 
roles:[getEmptyProps(?actor)]}
{name: succeeded, 
roles:[openaiChatCompletion(?actor,?requestBody)]}
{name: failed, 
roles:[openGripper(?actor)]}
{name: succeeded, 
roles:[cancelGoal(?actor,?goalID)]}
{name: failed, 
roles:[getMatchingResult(?actor,?toReBind,?results)]}
{name: failed, 
roles:[setupPoses(?actor)]}
{name: succeeded, 
roles:[configureScrewdriverProgram(?actor,?screwType,?torqueTarget,?torqueMax,?angleMax)]}
{name: succeeded, 
roles:[getCurrentGoals(?actor)]}
{name: succeeded, 
roles:[modifyAction(?actor,?action,?modification,?location)]}
{name: succeeded, 
roles:[getCognexJobForDescriptor(?actor,?descriptor)]}
{name: succeeded, 
roles:[getCurrentContextCount(?actor)]}
{name: failed, 
roles:[openaiCompletion(?actor,?prompt)]}
{name: succeeded, 
roles:[getStatusFromRef(?actor,?refId)]}
{name: succeeded, 
roles:[moveZRelative(?actor,?dist)]}
{name: succeeded, 
roles:[goToPoseLong(?actor,?goal)]}
{name: succeeded, 
roles:[translateGoal(?actor,?goal)]}
{name: failed, 
roles:[handleWantBel(?actor,?speaker,?addressee,?fact,?semanticType)]}
{name: unknownlocation, 
roles:[?actor]}
{name: failed, 
roles:[textsynthCompletion(?actor,?model,?prompt)]}
{name: succeeded, 
roles:[getSuccessFromRef(?actor,?refId)]}
{name: failed, 
roles:[completion(?actor,?prompt)]}
{name: failed, 
roles:[openaiCompletion(?actor,?modelSym,?prompt)]}
{name: succeeded, 
roles:[getDescriptorForID(?actor,?refId)]}
{name: succeeded, 
roles:[removeEntry(?actor,?name,?grammar,?meaning,?cognitiveStatus)]}
{name: failed, 
roles:[modifyAssemble(?actor,?scriptID,?modification,?location)]}
{name: succeeded, 
roles:[undoThenDo(?actor,?newGoal)]}
{name: failed, 
roles:[recordCameraPoseAsk(?actor,?poseName)]}
{name: failed, 
roles:[goToPoseLong(?actor,?pose,?cameraHeight)]}
{name: succeeded, 
roles:[retractRule(?actor,?head,?body,?memoryLevel)]}
{name: failed, 
roles:[retractBelief(?actor,?belief)]}
{name: succeeded, 
roles:[getActorFromQuery(?actor,?query)]}
{name: failed, 
roles:[positReference(?actor,?properties)]}
{name: succeeded, 
roles:[openaiChatCompletion(?actor,?prompt)]}
{name: failed, 
roles:[modifyAssemble(?actor,?newScriptID,?oldScriptID)]}
{name: failed, 
roles:[getScrewdriverProgramIdFromSymbol(?actor,?s)]}
{name: failed, 
roles:[putDown(?actor)]}
{name: succeeded, 
roles:[createCogRefWithProps(?actor,?j,?additionalProperties)]}
{name: succeeded, 
roles:[configureScrewdriverParam(?actor,?screwType,?val)]}
{name: succeeded, 
roles:[moveToObjectHeight(?actor)]}
{name: succeeded, 
roles:[pickUp(?actor,?objectRef)]}
{name: handled, 
roles:[?actor,utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)]}
{name: succeeded, 
roles:[supersedeCurrentGoal(?actor,?newGoal)]}
{name: succeeded, 
roles:[translate(?actor,?contextID)]}
{name: failed, 
roles:[getContextForGoal(?actor,?g)]}
{name: succeeded, 
roles:[alignWith(?actor,?holeRef)]}
{name: failed, 
roles:[assembleVision(?actor)]}
{name: at, 
roles:[?refId,!currPose]}
{name: succeeded, 
roles:[getGoalStatus(?actor,?gid)]}
{name: object, 
roles:[?modelName,physobj]}
{name: succeeded, 
roles:[isRepeatedPredicate(?actor,?word,?listener,?state,?recency)]}
{name: failed, 
roles:[goToPose(?actor,?pose,?cameraHeight)]}
{name: failed, 
roles:[querySupport(?actor,?query,?memoryLevel)]}
{name: succeeded, 
roles:[moveInPlane(?actor,?x,?y)]}
{name: failed, 
roles:[init(?actor)]}
{name: failed, 
roles:[handleRecovery(?actor,?speaker,?state,?recovery,?semanticType)]}
{name: failed, 
roles:[openaiChatCompletion(?actor,?requestBody)]}
{name: failed, 
roles:[resumeGoal(?actor,?goalPredicate)]}
{name: succeeded, 
roles:[retractBeliefs(?actor,?beliefs)]}
{name: knows, 
roles:[?actor,probabilityOf(?goalPred,?temporal,!prob)]}
{name: not, 
roles:[at(?actor,?pose1)]}
{name: succeeded, 
roles:[handleWantBel(?actor,?speaker,?addressee,?fact,?semanticType)]}
{name: succeeded, 
roles:[perceiveEntityFromSymbol(?actor,?refId)]}
{name: succeeded, 
roles:[getContextDescription(?actor,?location)]}
{name: failed, 
roles:[putdown(?actor,?physobj,?pose)]}
{name: failed, 
roles:[getSuccessFromRef(?actor,?refId)]}
{name: succeeded, 
roles:[goToPoseLong(?actor,?pose)]}
{name: failed, 
roles:[getCognexReferenceForID(?actor,?refId)]}
{name: failed, 
roles:[screwScrew(?actor,?screwType)]}
{name: succeeded, 
roles:[openaiChatCompletion(?actor,?messages)]}
{name: knows, 
roles:[?actor,mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)]}
{name: failed, 
roles:[acknowledge(?actor)]}
{name: succeeded, 
roles:[chatCompletion(?actor,?model,?chat)]}
{name: failed, 
roles:[getActionLearningStatus(?actor,?predicate)]}
{name: failed, 
roles:[getCurrGoals(?actor)]}
{name: failed, 
roles:[assertProperties(?actor,?ref,?properties)]}
{name: not, 
roles:[at(?physobj,?pose)]}
{name: succeeded, 
roles:[getGoal(?actor)]}
{name: failed, 
roles:[getObservers(?actor,?obs)]}
{name: failed, 
roles:[isQuestionResponse(?actor,?speaker,?listener,?semantics)]}
{name: failed, 
roles:[defineScrewType(?actor,?screwType)]}
{name: succeeded, 
roles:[joinOnGoal(?actor,?gid,?millis)]}
{name: failed, 
roles:[moveConveyorForward(?actor)]}
{name: failed, 
roles:[textsynthCompletion(?actor,?prompt)]}
{name: succeeded, 
roles:[textsynthCompletion(?actor,?model,?prompt)]}
{name: succeeded, 
roles:[getGoalFailConditions(?actor,?gid)]}
{name: failed, 
roles:[configureScrewdriverProgram(?actor,?screwType,?torqueTarget,?torqueMax,?angleMax)]}
{name: at, 
roles:[?physobj,?pose]}
{name: failed, 
roles:[bindToSurface(?actor,?goal,?surfaceHeight)]}
{name: succeeded, 
roles:[setupPoses(?actor)]}
{name: succeeded, 
roles:[setState(?actor,?predicate)]}
{name: succeeded, 
roles:[retractBelief(?actor,?belief,?memoryLevel)]}
{name: succeeded, 
roles:[rotateToEE(?actor,?gripperType)]}
{name: failed, 
roles:[undoThenDo(?actor,?newGoal)]}
{name: succeeded, 
roles:[getConstantMappings(?actor)]}
{name: succeeded, 
roles:[translateLastGoal(?actor)]}
{name: succeeded, 
roles:[handleWant(?actor,?speaker,?addressee,?state,?semanticType)]}
{name: succeeded, 
roles:[askAbout(?actor,?otherActor,?query,?returnQuery)]}
{name: failed, 
roles:[queryBelief(?actor,?queries)]}
{name: succeeded, 
roles:[moveConveyorBackward(?actor)]}
{name: failed, 
roles:[modifyAssemble(?actor,?newScriptID,?oldScriptID,?modification,?location)]}
{name: not, 
roles:[at(?actor,?pose2)]}
{name: succeeded, 
roles:[believeRule(?actor,?speaker,?head,?body,?semanticType)]}
{name: succeeded, 
roles:[believeFact(?actor,?speaker,?addressee,?fact,?semanticType)]}
{name: succeeded, 
roles:[setLLMModel(?actor,?model)]}
{name: succeeded, 
roles:[recordCameraPoseAsk(?actor,?poseName)]}
{name: failed, 
roles:[bindCognexResult(?actor,?ref,?result,?indexIntoCognexResult)]}
{name: failed, 
roles:[submitGoal(?actor,?g)]}
{name: succeeded, 
roles:[moveToCameraHeight(?actor)]}
{name: succeeded, 
roles:[assertRule(?actor,?head,?body)]}
{name: succeeded, 
roles:[generateResponse(?actor,?listener,?semantics,?semanticType)]}
{name: succeeded, 
roles:[goToPoseLong(?actor,?pose,?cameraHeight)]}
{name: succeeded, 
roles:[recordPose(?actor,?poseName,?surfaceHeight)]}
{name: succeeded, 
roles:[handleAck(?actor,?speaker,?addressee,?semanticType)]}
{name: failed, 
roles:[goToPose(?actor,?goal)]}
{name: succeeded, 
roles:[achieveState(?actor,?speaker,?state,?tentativeAcceptSemantics,?acceptSemantics,?semanticType)]}
{name: failed, 
roles:[getActionsByEffect(?actor,?effect)]}
{name: failed, 
roles:[updateActionLearning(?actor,?newAction,?status)]}
{name: succeeded, 
roles:[chatCompletion(?actor,?messages)]}
{name: succeeded, 
roles:[joinOnGoal(?actor,?gid)]}
{name: failed, 
roles:[believeRule(?actor,?speaker,?head,?body,?semanticType,?responseSemantics)]}
{name: succeeded, 
roles:[waitForAck(?actor)]}
{name: failed, 
roles:[openaiChatCompletion(?actor,?chat)]}
{name: failed, 
roles:[addNotifications(?actor,?queryTerm,?callbackTerm)]}
{name: succeeded, 
roles:[getMatchingResult(?actor,?toReBind,?results)]}
{name: succeeded, 
roles:[getContextForGoal(?actor,?g)]}
{name: failed, 
roles:[retractRule(?actor,?head,?body,?memoryLevel)]}
{name: succeeded, 
roles:[getActionsBySignature(?actor,?actionSignature)]}
{name: succeeded, 
roles:[queryLastSource(?actor,?query)]}
{name: succeeded, 
roles:[completion(?actor,?model,?prompt)]}
{name: failed, 
roles:[gotoCamerapose(?actor,?pose)]}
{name: failed, 
roles:[injectDictionaryEntry(?actor,?morpheme,?type,?semantics,?cognitiveStatus)]}
{name: failed, 
roles:[conveyorReverse(?actor)]}
{name: failed, 
roles:[handleITK(?actor,?speaker,?addressee,?query,?semanticType)]}
{name: failed, 
roles:[updateParam(?actor,?paramName,?newValue)]}
{name: succeeded, 
roles:[suspendGoal(?actor)]}
{name: failed, 
roles:[unstickScrewdriver(?actor,?returnTo)]}
{name: succeeded, 
roles:[getCurrentPose(?actor)]}
{name: failed, 
roles:[resumeGoal(?actor)]}
{name: holding, 
roles:[?actor,?physobj]}
{name: handled, 
roles:[?actor,?addressee,greeting(?speaker,?addressee,?greeting),?semanticType]}
{name: succeeded, 
roles:[runScrewdriverJob(?actor,?screwType)]}
{name: failed, 
roles:[observeFluent(?actor,?state)]}
{name: failed, 
roles:[resumeGoal(?actor,?goalID)]}
{name: failed, 
roles:[tell(?actor,?goal)]}
{name: failed, 
roles:[moveToCognexTarget(?actor,?results,?jobIndex)]}
{name: succeeded, 
roles:[estimatePerformanceMeasures(?actor,?goalPred,?temporal,?assessmentModification)]}
{name: succeeded, 
roles:[openaiChatCompletion(?actor,?model,?chat)]}
{name: handled, 
roles:[?actor,recover(want(?speaker,?state),?recovery),?semanticType]}
{name: failed, 
roles:[chatCompletion(?actor,?chat)]}
{name: not, 
roles:[at(?actor,?pose)]}
{name: failed, 
roles:[assertBelief(?actor,?belief)]}
{name: failed, 
roles:[endLearningAssembleScript(?actor,?modelName)]}
{name: failed, 
roles:[switchProgram(?actor,?id)]}
{name: failed, 
roles:[doCognexOffset(?actor)]}
{name: not, 
roles:[holding(?actor,?physobj)]}
{name: succeeded, 
roles:[goToPose(?actor,?pose)]}
{name: succeeded, 
roles:[gotocamerapose(?actor,?pose1,?pose2)]}
{name: failed, 
roles:[ejectEE(?actor)]}
{name: succeeded, 
roles:[querySupportWithExplanation(?actor,?query,?memoryLevel)]}
{name: knows, 
roles:[?actor,currentTime(!hour,!min)]}
{name: succeeded, 
roles:[queryRecency(?actor,?query)]}
{name: failed, 
roles:[moveAbove(?actor,?s)]}
{name: failed, 
roles:[getMelfaHeader(?actor)]}
{name: failed, 
roles:[assemblenvfau(?actor,?var_0)]}
{name: failed, 
roles:[setLLMService(?actor,?service)]}
{name: succeeded, 
roles:[submitNLGRequest(?actor,?speaker,?listener,?semantics,?bindings)]}
{name: succeeded, 
roles:[grab(?actor,?physobj,?pose)]}
{name: succeeded, 
roles:[queryBelief(?actor,?queries,?memoryLevel)]}
{name: succeeded, 
roles:[alternateEE(?actor,?newTCP)]}
{name: succeeded, 
roles:[getCognexJobForCognexReference(?actor,?ref)]}
{name: failed, 
roles:[getPoseFromSymbol(?actor,?poseName)]}
{name: succeeded, 
roles:[getModelType(?actor)]}
{name: failed, 
roles:[getTime(?actor)]}
{name: failed, 
roles:[getRefForJob(?actor,?descriptor)]}
{name: succeeded, 
roles:[moveAndOrientToCognexTarget(?actor,?refID)]}
{name: knows, 
roles:[?actor,durationOf(?goalPred,?temporal,?assessmentModification,!duration)]}
{name: failed, 
roles:[undoCognexOffset(?actor)]}
{name: failed, 
roles:[perceiveEntity(?actor,?refId)]}
{name: succeeded, 
roles:[moveXRelative(?actor,?dist)]}
{name: succeeded, 
roles:[mountSingleScrew(?actor)]}
{name: succeeded, 
roles:[resumeGoal(?actor,?goalID)]}
{name: failed, 
roles:[supersedeAndUndo(?actor,?newGoal)]}
{name: failed, 
roles:[gotocamerapose(?actor,?pose1,?pose2)]}
{name: succeeded, 
roles:[getActionStatus(?actor,?gid)]}
{name: succeeded, 
roles:[openGripper(?actor)]}
{name: failed, 
roles:[cancelGoal(?actor,?goalID)]}
{name: succeeded, 
roles:[assembleVision(?actor)]}
{name: succeeded, 
roles:[handleITK(?actor,?speaker,?addressee,?query,?semanticType)]}
{name: succeeded, 
roles:[goToPose(?actor,?pose,?cameraHeight)]}
{name: failed, 
roles:[dip(?actor,?dist)]}
{name: succeeded, 
roles:[querySupport(?actor,?query,?memoryLevel)]}
{name: failed, 
roles:[getStatusFromRef(?actor,?refId)]}
{name: failed, 
roles:[openaiChatCompletion(?actor,?model,?prompt)]}
{name: failed, 
roles:[chatCompletion(?actor,?messages)]}
{name: failed, 
roles:[getCurrentPose(?actor)]}
{name: succeeded, 
roles:[reconnect(?actor)]}
{name: failed, 
roles:[querySupportWithExplanation(?actor,?query)]}
{name: failed, 
roles:[actionExists(?actor,?goal)]}
{name: succeeded, 
roles:[observeProperties(?actor,?query)]}
{name: succeeded, 
roles:[openaiCompletion(?actor,?prompt)]}
{name: succeeded, 
roles:[assertBeliefs(?actor,?beliefs)]}
{name: failed, 
roles:[handleSemantics(?actor,?speaker,?addressee,?listeners,?semantics,?suppSemantics,?semanticType)]}
{name: failed, 
roles:[suspendGoal(?actor,?goalID)]}
{name: failed, 
roles:[assertRule(?actor,?head,?body)]}
{name: succeeded, 
roles:[positReference(?actor,?properties)]}
{name: succeeded, 
roles:[createBecausePredicate(?actor,?state,?listener,?justification)]}
{name: handled, 
roles:[?actor,?addressee,ack(?speaker,okay(?speaker,?actor)),?semanticType]}
{name: failed, 
roles:[getCurrentContextCount(?actor)]}
{name: failed, 
roles:[chatCompletion(?actor,?model,?prompt)]}
{name: succeeded, 
roles:[modifyAssemble(?actor,?scriptID,?modification,?location)]}
{name: failed, 
roles:[getActDesc(?actor,?goalPred)]}
{name: succeeded, 
roles:[defineItem(?actor,?item)]}
{name: failed, 
roles:[removeEntry(?actor,?name,?grammar,?meaning,?cognitiveStatus)]}
{name: failed, 
roles:[bindResultsRecursive(?actor,?job,?cameraResults,?i)]}
{name: failed, 
roles:[submitNLGRequest(?actor,?speaker,?listener,?semantics,?bindings)]}
{name: failed, 
roles:[submitTTSRequest(?actor,?speaker,?listener,?utterance)]}
{name: failed, 
roles:[translateGoal(?actor,?goal)]}
{name: succeeded, 
roles:[handleRecovery(?actor,?speaker,?state,?recovery,?semanticType)]}
{name: failed, 
roles:[getDescriptorForID(?actor,?refId)]}
{name: failed, 
roles:[isRepeatedPredicate(?actor,?word,?listener,?state,?recency)]}
{name: failed, 
roles:[openaiChatCompletion(?actor,?model,?messages)]}
{name: failed, 
roles:[pickUp(?actor,?objectRef)]}
{name: failed, 
roles:[goToPoseLong(?actor,?goal)]}
{name: succeeded, 
roles:[retractRule(?actor,?head,?body)]}
{name: succeeded, 
roles:[putDown(?actor)]}
{name: succeeded, 
roles:[getEmptyProps(?actor)]}
{name: failed, 
roles:[configureScrewdriverParam(?actor,?screwType,?val)]}
{name: failed, 
roles:[translate(?actor,?contextID)]}
{name: failed, 
roles:[screwIn(?actor,?var_1,?var_0)]}
{name: failed, 
roles:[getCognexJobForCognexReference(?actor,?ref)]}
{name: succeeded, 
roles:[moveAbove(?actor,?s)]}
{name: failed, 
roles:[createCogRefWithProps(?actor,?j,?additionalProperties)]}
{name: failed, 
roles:[moveToCognexTarget(?actor,?refID)]}
{name: failed, 
roles:[getActorFromQuery(?actor,?query)]}
{name: failed, 
roles:[forgetThat(?actor,?requester,?predicate)]}
{name: failed, 
roles:[listenForUtterance(?actor,?nlp)]}
{name: succeeded, 
roles:[getAllActions(?actor)]}
{name: failed, 
roles:[assertBeliefs(?actor,?beliefs,?memoryLevel)]}
{name: failed, 
roles:[askQuestion(?actor,?speaker,?toSay,?responseForm)]}
{name: failed, 
roles:[askAbout(?actor,?otherActor,?query,?returnQuery)]}
{name: failed, 
roles:[openaiChatCompletion(?actor,?messages)]}
{name: succeeded, 
roles:[openaiCompletion(?actor,?requestBody)]}
{name: failed, 
roles:[getGoal(?actor)]}
{name: failed, 
roles:[getGoalStatus(?actor,?gid)]}
{name: succeeded, 
roles:[getActionLearningStatus(?actor,?predicate)]}
{name: succeeded, 
roles:[init(?actor)]}
{name: succeeded, 
roles:[believeRule(?actor,?speaker,?head,?body,?semanticType,?responseSemantics)]}
{name: failed, 
roles:[rotateToEE(?actor,?gripperType)]}
{name: succeeded, 
roles:[closeGripper(?actor)]}
{name: succeeded, 
roles:[getOn(?actor,?object,?destination)]}
{name: failed, 
roles:[assemblenfsv(?actor,?var_0)]}
{name: succeeded, 
roles:[modifyAssemble(?actor,?newScriptID,?oldScriptID)]}
{name: failed, 
roles:[mountScrew(?actor,?screwType)]}
{name: failed, 
roles:[moveToObjectHeight(?actor)]}
{name: failed, 
roles:[handleError(?actor,?speaker,?addressee,?errorSemantics,?semanticType)]}
{name: succeeded, 
roles:[moveConveyorForward(?actor)]}
{name: succeeded, 
roles:[checkCapableOf(?actor,?goal)]}
{name: succeeded, 
roles:[queryBelief(?actor,?query)]}
{name: succeeded, 
roles:[forgetHow(?actor,?requester,?actionSignature)]}
{name: failed, 
roles:[removeActionsWithSignature(?actor,?actionSignature)]}
{name: failed, 
roles:[cancelGoal(?actor,?goal)]}
{name: succeeded, 
roles:[textsynthCompletion(?actor,?prompt)]}
{name: not, 
roles:[free(?actor)]}
{name: failed, 
roles:[assemble(?actor,?modelID)]}
{name: succeeded, 
roles:[rotateForToolRack(?actor)]}
{name: succeeded, 
roles:[handleGreeting(?actor,?speaker,?addressee,?greeting,?semanticType)]}
{name: handled, 
roles:[?actor,?addressee,wantBel(?speaker,?addressee,?fact),?semanticType]}
{name: failed, 
roles:[moveAwayFromJointLimit(?actor)]}
{name: failed, 
roles:[openaiChatCompletion(?actor,?prompt)]}
{name: succeeded, 
roles:[assertRule(?actor,?head,?body,?memoryLevel)]}
{name: failed, 
roles:[querySupport(?actor,?query)]}
{name: failed, 
roles:[getContextFromId(?actor,?id)]}
{name: failed, 
roles:[generateResponse(?actor,?listener,?semantics,?semanticType)]}
{name: succeeded, 
roles:[openaiCompletion(?actor,?modelSym,?prompt)]}
{name: succeeded, 
roles:[completion(?actor,?prompt)]}
{name: succeeded, 
roles:[generateResponse(?actor,?listener,?semantics,?bindings,?semanticType)]}
{name: handled, 
roles:[?actor,?addressee,error(?speaker,?errorSemantics),?semanticType]}
{name: failed, 
roles:[estimatePerformanceMeasures(?actor,?goalPred,?temporal)]}
{name: failed, 
roles:[answerQuestion(?actor,?speaker,?listener,?answerSemantics)]}
{name: failed, 
roles:[achieveState(?actor,?speaker,?state,?tentativeAcceptSemantics,?acceptSemantics,?semanticType)]}
{name: failed, 
roles:[isDiarcAgent(?actor,?agentRef)]}
{name: failed, 
roles:[getPromptText(?actor)]}
{name: failed, 
roles:[believeFact(?actor,?speaker,?addressee,?fact,?semanticType,?responseSemantics)]}
{name: failed, 
roles:[getCameraData(?actor,?jobName)]}
{name: succeeded, 
roles:[putAwayGripper(?actor,?gripperType)]}
{name: succeeded, 
roles:[assertProperties(?actor,?ref,?properties)]}
{name: failed, 
roles:[conveyorForward(?actor)]}
{name: succeeded, 
roles:[bindToSurface(?actor,?goal,?surfaceHeight)]}
{name: failed, 
roles:[retractBeliefs(?actor,?beliefs,?memoryLevel)]}
{name: failed, 
roles:[getCurrentGoals(?actor)]}
{name: succeeded, 
roles:[runScrewdriverProgram(?actor,?programID)]}
{name: succeeded, 
roles:[addDetectionType(?actor,?descriptor,?jobName)]}
{name: failed, 
roles:[getCognexJobForDescriptor(?actor,?descriptor)]}
{name: failed, 
roles:[sayText(?actor,?text)]}
{name: failed, 
roles:[chatCompletion(?actor,?prompt)]}
{name: failed, 
roles:[acceptEE(?actor)]}
{name: knows, 
roles:[?actor,durationOf(?goalPred,?temporal,!duration)]}
{name: succeeded, 
roles:[queryCount(?actor,?query)]}


