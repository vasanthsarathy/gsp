{
  "utterances" : [ {
    "utteranceText" : "put the donut left of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putleft(self:agent,VAR0,VAR1),{donut(VAR0),carrot(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the donut left of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putleft(self:agent,VAR0,VAR1),{donut(VAR0),carrot(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "put the donut right of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putright(self:agent,VAR0,VAR1),{donut(VAR0),carrot(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the donut right of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putright(self:agent,VAR0,VAR1),{donut(VAR0),carrot(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the bandage box right of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putright(self:agent,VAR0:physobj,VAR1),{bandagebox(VAR0:physobj),carrot(VAR1),DEFINITE(VAR0:physobj),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the carrot right of the bandage box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putright(self:agent,VAR0,VAR1:physobj),{carrot(VAR0),bandagebox(VAR1:physobj),DEFINITE(VAR0),DEFINITE(VAR1:physobj)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the carrot left of the bandage box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putleft(self:agent,VAR0,VAR1:physobj),{carrot(VAR0),bandagebox(VAR1:physobj),DEFINITE(VAR0),DEFINITE(VAR1:physobj)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "put the carrot left of the bandage box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putleft(self:agent,VAR0,VAR1:physobj),{carrot(VAR0),bandagebox(VAR1:physobj),DEFINITE(VAR0),DEFINITE(VAR1:physobj)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "put the tennis ball in the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,pack(self:agent,VAR0,VAR1),{tennisball(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the tennis ball in the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,pack(self:agent,VAR0,VAR1),{tennisball(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the tennis ball in the bowl",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,pack(self:agent,VAR0,VAR1),{tennisball(VAR0),bowl(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "put the tennis ball in the bowl",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,pack(self:agent,VAR0,VAR1),{tennisball(VAR0),bowl(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "take the tennis ball out of the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,unpack(self:agent,VAR0,VAR1),{tennisball(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the tennis ball on the block",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,stack(self:agent,VAR0,VAR1),{tennisball(VAR0),block(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "put the tennis ball on the block",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,stack(self:agent,VAR0,VAR1),{tennisball(VAR0),block(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "stack the tennis ball on the block",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,stack(self:agent,VAR0,VAR1),{tennisball(VAR0),block(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "unstack the tennis ball from the car",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,unpack(self:agent,VAR0,VAR1),{tennisball(VAR0),car(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "unstack the tennis ball on the block",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,unstack(self:agent,VAR0,VAR1),{tennisball(VAR0),block(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "put the bowl in the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,pack(self:agent,VAR0,VAR1),{bowl(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "stack the bowl on the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,stack(self:agent,VAR0,VAR1),{bowl(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "stack the box on the bowl",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,stack(self:agent,VAR0,VAR1),{box(VAR0),bowl(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "take the tennis ball out of the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,unpack(self:agent,VAR0,VAR1),{tennisball(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "unstack the flowerpot off of the car",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,unstack(self:agent,VAR0,VAR1),{flowerpot(VAR0),car(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "unstack the flowerpot from the car",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,unpack(self:agent,VAR0,VAR1),{flowerpot(VAR0),car(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "place the car right of the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putright(self:agent,VAR0,VAR1),{car(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "put the bowl left of the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,putleft(self:agent,VAR0,VAR1),{bowl(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the donut left of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,leftof(VAR0,VAR1)),{carrot(VAR0),donut(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "get the donut left of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,leftof(VAR0,VAR1)),{carrot(VAR0),donut(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the donut right of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,rightof(VAR0,VAR1)),{carrot(VAR0),donut(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "get the donut right of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,rightof(VAR0,VAR1)),{carrot(VAR0),donut(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the bandage box right of the carrot",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,rightof(VAR0,VAR1:physobj)),{carrot(VAR0),bandagebox(VAR1:physobj),DEFINITE(VAR0),DEFINITE(VAR1:physobj)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the carrot right of the bandage box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,rightof(VAR0:physobj,VAR1)),{bandagebox(VAR0:physobj),carrot(VAR1),DEFINITE(VAR0:physobj),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "get the carrot left of the bandage box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,leftof(VAR0:physobj,VAR1)),{bandagebox(VAR0:physobj),carrot(VAR1),DEFINITE(VAR0:physobj),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the carrot left of the bandage box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,leftof(VAR0:physobj,VAR1)),{bandagebox(VAR0:physobj),carrot(VAR1),DEFINITE(VAR0:physobj),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the tennis ball in the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,in(VAR0,VAR1)),{box(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "get the tennis ball in the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,in(VAR0,VAR1)),{box(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the tennis ball in the bowl",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,in(VAR0,VAR1)),{bowl(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "get the tennis ball in the bowl",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,in(VAR0,VAR1)),{bowl(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the tennis ball out of the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,not(in(VAR0,VAR1))),{box(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the tennis ball on the block",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,on(VAR0,VAR1)),{block(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "get the tennis ball on the block",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,on(VAR0,VAR1)),{block(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the tennis ball from the car",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,from(VAR0,VAR1)),{car(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the tennis ball on the block",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,on(VAR0,VAR1)),{block(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the bowl in the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,in(VAR0,VAR1)),{box(VAR0),bowl(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "get the bowl on the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,on(VAR0,VAR1)),{box(VAR0),bowl(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the box on the bowl",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,on(VAR0,VAR1)),{bowl(VAR0),box(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  }, {
    "utteranceText" : "i want the tennis ball out of the box",
    "desiredSemantics" : "INSTRUCT(tyler,self:agent,goal(self:agent,not(in(VAR0,VAR1))),{box(VAR0),tennisball(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})",
    "promptInfo" : {
      "actions" : [ {
        "name" : "handleAck",
        "roles" : [ "?actor", "?speaker", "?addressee", "?semanticType" ],
        "description" : "Handle ack semantics"
      }, {
        "name" : "unstack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "getCurrGoals",
        "roles" : [ "?actor" ],
        "description" : "get list of current goals and assert it to belief"
      }, {
        "name" : "graspObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "lookForObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "createRecipeGoal",
        "roles" : [ "?actor", "?recipeID" ],
        "description" : "creates goal state to submit to planner based on ?recipeID"
      }, {
        "name" : "startVisualSearch",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "findObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "unpack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "defineRecipe",
        "roles" : [ "?actor", "?descriptor" ],
        "description" : "defines new recipe which is essentially a goal state to be achieved a planner"
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "stack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "placeIn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putright",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "translateLastGoal",
        "roles" : [ "?actor" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation" ],
        "description" : ""
      }, {
        "name" : "handleGreeting",
        "roles" : [ "?actor", "?speaker", "?addressee", "?greeting", "?semanticType" ],
        "description" : "Handle greeting semantics"
      }, {
        "name" : "findGraspableObject",
        "roles" : [ "?actor", "?objectRef" ],
        "description" : ""
      }, {
        "name" : "initializeContainer",
        "roles" : [ "?actor", "?refId" ],
        "description" : ""
      }, {
        "name" : "detectObjectAtLocation",
        "roles" : [ "?actor", "?refId", "?property", "?location" ],
        "description" : ""
      }, {
        "name" : "releaseObject",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "deliver",
        "roles" : [ "?actor", "?recipe", "?location" ],
        "description" : "?actor delivers a lunch box of ?recipe"
      }, {
        "name" : "placeOn",
        "roles" : [ "?actor", "?objectRef_0", "?objectRef_1", "?arm" ],
        "description" : ""
      }, {
        "name" : "putleft",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      }, {
        "name" : "pickup",
        "roles" : [ "?actor", "?objectRef", "?arm" ],
        "description" : ""
      }, {
        "name" : "carry",
        "roles" : [ "?actor", "?objectRef", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "approach",
        "roles" : [ "?actor", "?desiredLocation", "?initialLocation" ],
        "description" : ""
      }, {
        "name" : "getTime",
        "roles" : [ "?actor" ],
        "description" : "get the system time and assert it to belief"
      }, {
        "name" : "pickupop",
        "roles" : [ "?actor", "?obj1", "?location" ],
        "description" : ""
      }, {
        "name" : "moveObject",
        "roles" : [ "?actor", "?objectRef", "?dir" ],
        "description" : ""
      }, {
        "name" : "pack",
        "roles" : [ "?actor", "?obj1", "?obj2" ],
        "description" : ""
      } ],
      "properties" : [ {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "any",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "blue",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "red",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "physobj",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "person",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "grasp_point",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "on",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "leftof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "rightof",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "in",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "caddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "screwbin",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "partOf",
        "roles" : [ "X:physobj", "Y:physobj" ]
      }, {
        "name" : "painkiller",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "antiseptic",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bandagebox",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxtop",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "gearboxbottom",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "block",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "medicalcaddy",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "apple",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "baseball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "glassbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "bowl",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "carrot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "donut",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "flowerpot",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "computermouse",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "car",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "sportsbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "teddybear",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "tennisball",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "waterbottle",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "box",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "it",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "this",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "that",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "those",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "they",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "these",
        "roles" : [ "X:physobj" ]
      }, {
        "name" : "doit",
        "roles" : [ "X:dialog" ]
      }, {
        "name" : "dothis",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "dothat",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "that",
        "roles" : [ "Xdialog:dialog" ]
      }, {
        "name" : "this",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "caddylocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "screwlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "smallgearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "largegearlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableELocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "gearboxbottomlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "tableGLocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "handoverlocation",
        "roles" : [ "VAR0:movebaselocation" ]
      }, {
        "name" : "it",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "that",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "those",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "they",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "these",
        "roles" : [ "X:movebaselocation" ]
      }, {
        "name" : "this",
        "roles" : [ "X:context" ]
      }, {
        "name" : "it",
        "roles" : [ "X:context" ]
      }, {
        "name" : "that",
        "roles" : [ "X:context" ]
      }, {
        "name" : "thing",
        "roles" : [ "X:context" ]
      }, {
        "name" : "those",
        "roles" : [ "X:context" ]
      }, {
        "name" : "they",
        "roles" : [ "X:context" ]
      }, {
        "name" : "these",
        "roles" : [ "X:context" ]
      } ],
      "activeQuestions" : [ ],
      "facts" : [ ],
      "states" : [ {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,car:property)", "0" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?obj1" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?obj1)" ]
      }, {
        "name" : "rightof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "capableOf(?goal)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currently(is(?actor,!tmpPred))" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "error(?speaker,?errorSemantics)", "?semanticType" ]
      }, {
        "name" : "free",
        "roles" : [ "?actor" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "itk(?speaker,?query)", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "free(?actor)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,carrot:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?obj1", "?location" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,waterbottle:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,!mostLikely)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,sportsbottle:property)", "0" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?desiredLocation" ]
      }, {
        "name" : "at",
        "roles" : [ "?refId", "?location" ]
      }, {
        "name" : "not",
        "roles" : [ "see(?actor,?objectRef)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,computermouse:property)", "0" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "ack(?speaker,okay(?speaker,?actor))", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?obj1,?location)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,!prob)" ]
      }, {
        "name" : "at",
        "roles" : [ "?actor", "?location" ]
      }, {
        "name" : "on",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "probabilityOf(?goalPred,?temporal,?assessmentModification,!prob)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,flowerpot:property)", "0" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "contextDescription(?location,!steps)" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,bandagebox:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,baseball:property)", "0" ]
      }, {
        "name" : "propertyof",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "not",
        "roles" : [ "in(?obj1,?obj2)" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "grasping",
        "roles" : [ "?actor", "?objectRef", "?arm" ]
      }, {
        "name" : "touching",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,donut:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,glassbottle:property)", "0" ]
      }, {
        "name" : "not",
        "roles" : [ "touching(?actor,?objectRef)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "wantBel(?speaker,?addressee,?fact)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,teddybear:property)", "0" ]
      }, {
        "name" : "in",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "greeting(?speaker,?addressee,?greeting)", "?semanticType" ]
      }, {
        "name" : "holding",
        "roles" : [ "?actor", "?objectRef", "arm" ]
      }, {
        "name" : "handledSemantics",
        "roles" : [ "?actor", "?addressee", "?speaker", "?listeners", "?semantics", "?suppSemantics", "?semanticType" ]
      }, {
        "name" : "not",
        "roles" : [ "holding(?actor,?objectRef_0,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "grasping(?actor,?objectRef,?arm)" ]
      }, {
        "name" : "not",
        "roles" : [ "at(?actor,?initialLocation)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,?assessmentModification,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "durationOf(?goalPred,?temporal,!duration)" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "currentTime(!hour,!min)" ]
      }, {
        "name" : "fluent_increase",
        "roles" : [ "amount(?location,?property)", "1" ]
      }, {
        "name" : "believes",
        "roles" : [ "?addressee", "?fact" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,antiseptic:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,apple:property)", "0" ]
      }, {
        "name" : "object",
        "roles" : [ "?refId", "?property" ]
      }, {
        "name" : "see",
        "roles" : [ "?actor", "?objectRef" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "recover(want(?speaker,?state),?recovery)", "?semanticType" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "actionDescription(?goalPred,!stepPredicate)" ]
      }, {
        "name" : "leftof",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "in",
        "roles" : [ "?objectRef_0", "?objectRef_1" ]
      }, {
        "name" : "object",
        "roles" : [ "?poseName", "pose" ]
      }, {
        "name" : "not",
        "roles" : [ "on(?obj1,?obj2)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "utterance(?speaker,?addressee,?listeners,?semantics,?indirectSemantics,?suppSemantics)" ]
      }, {
        "name" : "handled",
        "roles" : [ "?actor", "?addressee", "want(?speaker,?state)", "?semanticType" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,painkiller:property)", "0" ]
      }, {
        "name" : "fluent_equals",
        "roles" : [ "amount(?refId,tennisball:property)", "0" ]
      }, {
        "name" : "on",
        "roles" : [ "?obj1", "?obj2" ]
      }, {
        "name" : "knows",
        "roles" : [ "?actor", "mostLikelyToFailOf(?goalPred,?temporal,?assessmentModification,!mostLikely)" ]
      } ],
      "goals" : [ {
        "goal" : "not(on(?obj1,?obj2))"
      }, {
        "goal" : "on(?obj1,?obj2)"
      }, {
        "goal" : "not(at(?obj1,?location))"
      }, {
        "goal" : "free(?actor)"
      }, {
        "goal" : "rightof(?obj1,?obj2)"
      }, {
        "goal" : "leftof(?obj1,?obj2)"
      }, {
        "goal" : "not(holding(?actor,?obj1))"
      }, {
        "goal" : "not(free(?actor))"
      }, {
        "goal" : "not(in(?obj1,?obj2))"
      }, {
        "goal" : "in(?obj1,?obj2)"
      }, {
        "goal" : "holding(?actor,?obj1)"
      }, {
        "goal" : "at(?obj1,?location)"
      } ]
    }
  } ]
}
