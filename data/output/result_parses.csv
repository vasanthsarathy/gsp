setup poses, want(brad,NONE,{NONE(pose)}), INSTRUCT(brad,self:agent,want(brad,setupPoses(self:agent)),{})
define new screw type m3, want(brad,defineItem(self,VAR1),{NONE(VAR1),NONE(VAR1),m3(VAR1),INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,defineScrewType(self:agent,m3)),{})
150 millinewton meters, wantbel(brad,magnitude(VAR0),{NONE(VAR0),NONE(VAR0),INDEFINITE(VAR0)}), UNKNOWN(brad,self:agent,val(150,mNm),{})
300 millinewton meters, itk(brad,torque(VAR0),{NONE(VAR0),NONE(VAR0)}), UNKNOWN(brad,self:agent,val(300,mNm),{})
6500 degrees, wantbel(brad,high(VAR0),{NONE(VAR0),INDEFINITE(VAR0)}), UNKNOWN(brad,self:agent,val(6500,deg),{})
pose screw feeder, want(brad,NONE,{screw feeder(central)}), UNKNOWN(brad,self:agent,pose(VAR0),{screw feeder(VAR0),DEFINITE(VAR0)})
i will teach you how to screw a screw into a hole, wantbel(brad,teaching(self,VAR1,VAR2,VAR3),{NONE(VAR1),hole(VAR2),NONE(VAR1,VAR2)}), STATEMENT(brad,self:agent,want(brad,updateActionLearning(self:agent,screwIn(self:agent,screw,hole(_24822)),start)),{hole(VAR0),DEFINITE(VAR0)})
first verify that you can see the hole, itk(brad,verify(self,VAR1,VAR2),{hole(VAR1),hole(self,VAR1),NONE(VAR2),DEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,perceiveEntity(self:agent,VAR0)),{hole(VAR0),DEFINITE(VAR0)})
then mount the screw, want(brad,mountScrew(self,VAR1),{NONE(VAR1),DEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,mountScrew(self:agent,screw)),{})
then align with the hole, want(brad,alignWith(self,VAR1),{hole(VAR1),DEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,alignWith(self:agent,VAR0)),{hole(VAR0),DEFINITE(VAR0)})
then run the screwdriver job of the screw, want(brad,NONE,{NONE(action),NONE(physobj.)}), INSTRUCT(brad,self:agent,want(brad,runScrewdriverJob(self:agent,screw)),{})
that is how you screw a screw into a hole, wantbel(brad,insertion(VAR0,self,VAR2),{NONE(VAR0),hole(VAR2),ACTIVATED(VAR0),INDEFINITE(VAR2)}), STATEMENT(brad,self:agent,want(brad,updateActionLearning(self:agent,screwIn(self:agent,screw,hole(_54297)),end)),{hole(VAR0),DEFINITE(VAR0)})
define new item nfsv, itk(brad,definition(VAR0),{NONE(VAR0),INDEFINITE(VAR0)}), INSTRUCT(brad,self:agent,want(brad,defineItem(self:agent,nfsv)),{})
job circuit breaker face, itk(brad,face(VAR0,VAR1,VAR2),{NONE(VAR0),NONE(VAR1),NONE(VAR2),INDEFINITE(VAR0),INDEFINITE(VAR1)}), UNKNOWN(brad,self:agent,job(cbDet),{})
i will teach you how to assemble a nfsv, wantbel(brad,teach(self,VAR1,VAR2),{NONE(VAR1),NONE(VAR1),INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,startLearningAssembleScript(self:agent,VAR0)),{nfsv(VAR0),DEFINITE(VAR0)})
first go to pose conveyor, want(brad,goToPose(self,VAR1,VAR2),{NONE(VAR1),INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,gotoCamerapose(self:agent,VAR0)),{conveyor(VAR0),DEFINITE(VAR0)})
then verify that you can see the nfsv, itk(brad,see(self,VAR1,VAR2),{NONE(self,VAR1),DEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,perceiveEntity(self:agent,VAR0)),{nfsv(VAR0),DEFINITE(VAR0)})
then get the nfsv on the work area, want(brad,NONE,{nfsv(action),work area(location.)}), INSTRUCT(brad,self:agent,want(brad,getOn(self:agent,VAR0,VAR1)),{nfsv(VAR0),work area(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})
then search for 2 m3 holes, want(brad,NONE,{m3(physobj)}), INSTRUCT(brad,self:agent,want(brad,observeDescriptor(self:agent,m3,2)),{})
screw a m3 screw into the left m3 hole, want(brad,screwScrew(self,VAR1,VAR2),{m3(VAR1),m3(VAR2),INDEFINITE(VAR1),DEFINITE(VAR2)}), INSTRUCT(brad,self:agent,want(brad,screwIn(self:agent,m3,VAR0)),{m3(VAR0),left(VAR0),DEFINITE(VAR0)})
then go to pose work area, want(brad,goToPose(self,VAR1,VAR2),{INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,gotoCamerapose(self:agent,VAR0)),{work area(VAR0),DEFINITE(VAR0)})
screw a m3 screw into the right m3 hole, want(brad,screwScrew(self,VAR1,VAR2),{NONE(VAR1),m3(VAR2),INDEFINITE(VAR1),DEFINITE(VAR2)}), INSTRUCT(brad,self:agent,want(brad,screwIn(self:agent,m3,VAR0)),{m3(VAR0),right(VAR0),DEFINITE(VAR0)})
then get the nfsv on the conveyor, want(brad,NONE,{nfsv(central),conveyor(supplemental)}), INSTRUCT(brad,self:agent,want(brad,getOn(self:agent,VAR0,VAR1)),{nfsv(VAR0),conveyor(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})
then advance the conveyor belt, want(brad,NONE,{conveyor(physobj)}), INSTRUCT(brad,self:agent,want(brad,moveConveyorForward(self:agent)),{})
that is how you assemble a nfsv, wantbel(brad,assemble(self,VAR1,VAR2,VAR3),{nfsv(VAR1),INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,endLearningAssembleScript(self:agent,VAR0))),{nfsv(VAR0),DEFINITE(VAR0)})
assemble a nfsv, want(brad,assemble(self,VAR1),{nfsv(VAR1),INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,assemble(self:agent,VAR0)),{nfsv(VAR0),DEFINITE(VAR0)})
define new item nvfau, want(brad,defineItem(self,VAR1),{new item nvfau(VAR1),INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,defineItem(self:agent,nvfau)),{})
job n v face, itk(brad,face_job(VAR0,VAR1),{NONE(VAR0),NONE(VAR1),INDEFINITE(VAR0),INDEFINITE(VAR1)}), UNKNOWN(brad,self:agent,job(nvDet),{})
assemble an nvfau is like assemble an nfsv, wantbel(brad,similarity(VAR0,VAR1),{nvfau(VAR0),nfsv(VAR1),NONE(VAR0),NONE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,modifyAssemble(self:agent,assemble(self:agent,VAR0),assemble(self:agent,VAR1))),{nvfau(VAR0),nfsv(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})
replace search for 2 m3 holes with search for 2 deep m3 holes, want(brad,NONE,{deepM3(central),deepM3(supplemental),deepM3(central)}), UNKNOWN(brad,self:agent,mod(replace(observeDescriptor(self:agent,deepM3,2),observeDescriptor(self:agent,m3,2))),{})
replace screw an m3 screw into the left m3 hole with screw an m3 screw into the bottom deep m3 hole, want(brad,NONE,{m3(central),left(supplemental),deepM3(supplemental),NONE(central,supplemental)}), UNKNOWN(brad,self:agent,mod(replace(screwIn(self:agent,m3,VAR1),screwIn(self:agent,m3,VAR0))),{m3(VAR0),left(VAR0),deepM3(VAR1),bottom(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})
replace screw an m3 screw into the right m3 hole with screw an m3 screw into the top deep m3 hole, want(brad,NONE,{m3(central),right(supplemental),deepM3(supplemental)}), UNKNOWN(brad,self:agent,mod(replace(screwIn(self:agent,m3,VAR1),screwIn(self:agent,m3,VAR0))),{m3(VAR0),right(VAR0),deepM3(VAR1),top(VAR1),DEFINITE(VAR0),DEFINITE(VAR1)})
that is all, itk(brad,completion(),{}), UNKNOWN(brad,self:agent,mod(none),{})
assemble an nvfau, want(brad,assemble(self,VAR1),{INDEFINITE(VAR1)}), INSTRUCT(brad,self:agent,want(brad,assemble(self:agent,VAR0)),{nvfau(VAR0),DEFINITE(VAR0)})
